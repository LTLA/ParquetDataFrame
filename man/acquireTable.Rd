% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acquireTable.R
\name{acquireTable}
\alias{acquireTable}
\alias{releaseTable}
\title{Acquire the Arrow Table}
\usage{
acquireTable(path, ...)

releaseTable(path)
}
\arguments{
\item{path}{String specifying a path to a Parquet data directory or file.}

\item{...}{Further arguments to be passed to \code{\link[arrow]{open_dataset}}.}
}
\value{
For \code{acquireTable}, an Arrow Table identical to that returned by \code{as_arrow_table(\link[arrow]{open_dataset})}.

For \code{releaseTable}, any existing Table for the \code{path} is cleared from cache, and \code{NULL} is invisibly returned.
If \code{path=NULL}, all cached Tables are removed.
}
\description{
Acquire a (possibly cached) Arrow Table created from Parquet data.
}
\details{
\code{acquireTable} will cache the Table object in the current R session to avoid repeated initialization.
This improves efficiency for repeated calls, e.g., when creating a \linkS4class{DataFrame} with multiple columns from the same Parquet data path.
The cached Table for any given \code{path} can be deleted by calling \code{releaseTable} for the same \code{path}.
}
\examples{
# Mocking up a parquet file:
tf <- tempfile()
on.exit(unlink(tf))
arrow::write_parquet(mtcars, tf)

acquireTable(tf)
acquireTable(tf) # just re-uses the cache
releaseTable(tf) # clears the cache

# Mocking up a parquet data diretory:
td <- tempfile()
on.exit(unlink(td), add = TRUE)
arrow::write_dataset(mtcars, td, format = "parquet", partitioning = "cyl")

acquireTable(td)
acquireTable(td) # just re-uses the cache
releaseTable(td) # clears the cache
}
\author{
Aaron Lun, Patrick Aboyoun
}
